<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hosinsa.mapper.MemberMapper">

<!-- SELECT 문 -->
<select id="getList" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member
</select>

<!-- ID 중복체크 -->
<select id="idCheck" resultType="int">
	select count(*) from hosinsa_member where id = #{id}
</select>

<!-- 카카오 ID 체크 -->
<select id="kakaoIdCheck" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member where id = #{id}
</select>

<!-- NickName 중복체크 -->
<select id="nickCheck" resultType="int">
	select count(*) from hosinsa_member where nickname = #{nickname}
</select>

<!-- introducer 중복체크 -->
<select id="introCheck" resultType="int">
	select count(*) from hosinsa_member where id = #{id}
</select>

<select id="read" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member where id = #{id}
</select>

<!-- 로그인 -->
<select id="memberLogin" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member where id = #{id} and pw = #{pw}
</select>

<select id="getOrderList" resultType="com.hosinsa.domain.OrderVO">
	select * from hosinsa_order where id = #{id} order by order_date desc
</select>

<select id="getPreList" resultType="com.hosinsa.domain.PreReviewVO">
	select * from hosinsa_p_review where id = #{id} order by expiredate asc
</select>

<select id="getAlreadyList" resultType="com.hosinsa.domain.ReviewVO">
	select * from hosinsa_review where id=#{id} order by bno desc
</select>

<select id="getLikesListWithPaging" resultType="com.hosinsa.domain.ProductVO" parameterType="Map">
	<![CDATA[
		select * from 
			(select rownum rn, p.* from hosinsa_product p, hosinsa_likes l 
			where p.pronum=l.pronum and l.id=#{id} and rownum <= 14*#{page})
		where rn > 14*(#{page}-1)
	]]>
</select>

<select id="getOrder" resultType="com.hosinsa.domain.OrderVO">
	select * from hosinsa_order where ordernum = #{ordernum} and pronum = #{pronum}
</select>

<!-- INSERT 문 -->
<insert id="insert">
	insert into hosinsa_member values
	(#{id}, #{pw, jdbcType=VARCHAR}, #{name}, #{gender}, #{birthday, jdbcType=DATE}, #{email}, 
	#{phone, jdbcType=VARCHAR}, #{nickname}, #{profilimg, jdbcType=VARCHAR}, #{grade}, #{introducer, jdbcType=VARCHAR}, #{point})
</insert>

<!-- UPDATE 문 -->
<update id="update">
	update hosinsa_member set
	PW = #{pw, jdbcType=VARCHAR},
	NAME = #{name, jdbcType=VARCHAR},
	GENDER = #{gender, jdbcType=VARCHAR},
	BIRTHDAY = to_date(#{birthday, jdbcType=DATE},'yyyy-MM-dd'),
	EMAIL = #{email, jdbcType=VARCHAR},
	PHONE = #{phone, jdbcType=CHAR},
	NICKNAME = #{nickname, jdbcType=VARCHAR},
	PROFILIMG = #{profilimg, jdbcType=VARCHAR},
	GRADE = #{grade, jdbcType=CHAR},
	INTRODUCER = #{introducer, jdbcType=VARCHAR},
	POINT = #{point, jdbcType=INTEGER}
	WHERE ID = #{id}
</update>

<update id="delete">
	update hosinsa_member set
	PW = null,
	NAME = null,
	GENDER = null,
	BIRTHDAY = null,
	EMAIL = null,
	PHONE = null,
	NICKNAME = null,
	PROFILIMG = null,
	GRADE = null,
	INTRODUCER = null,
	POINT = null
	WHERE ID = #{id}
</update>

</mapper>