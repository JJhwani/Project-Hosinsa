<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hosinsa.mapper.MemberMapper">

<!-- SELECT 문 -->
<select id="getList" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member
</select>

<select id="read" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member where id = #{id}
</select>

<!-- 로그인 -->
<select id="memberLogin" resultType="com.hosinsa.domain.MemberVO">
	select * from hosinsa_member where id = #{id} and pw = #{pw}
</select>

<!-- ID 중복체크 -->
<select id="idCheck" resultType="int">
	select count(*) from hosinsa_member where id = #{id}
</select>

<!-- NickName 중복체크 -->
<select id="nickCheck" resultType="int">
	select count(*) from hosinsa_member where nickname = #{nickname}
</select>

<!-- introducer 중복체크 -->
<select id="introCheck" resultType="int">
	select count(*) from hosinsa_member where id = #{id}
</select>

<!-- Paging 처리 -->
<select id="getListWithPaging" resultType="com.hosinsa.domain.MemberVO">
<![CDATA[
SELECT ID, PW, NAME, GENDER, BIRTHDAY, EMAIL, PHONE, NICKNAME, PROFILIMG, GRADE,
    INTRODUCER, POINT FROM
        (SELECT ROWNUM RN, ID, PW, NAME, GENDER, BIRTHDAY, EMAIL, PHONE,
            NICKNAME, PROFILIMG, GRADE, INTRODUCER, POINT  FROM HOSINSA_MEMBER
            WHERE ROWNUM <= #{pageNum} * #{amount})
            WHERE RN > (#{pageNum} -1) * #{amount}
]]>
</select>

<select id="getTotalCount" resultType="int">
	select count(*) from hosinsa_member
</select>

<!-- INSERT 문 -->
<insert id="insert">
	insert into hosinsa_member values
	(#{id}, #{pw}, #{name}, #{gender}, #{birthday}, #{email}, #{phone}, #{nickname}, #{profilimg, jdbcType=VARCHAR}, #{grade},#{introducer, jdbcType=VARCHAR}, #{point})
</insert>

<!-- DELETE 문 -->
<delete id="delete">
	delete from hosinsa_member where id = #{id}
</delete>

<!-- UPDATE 문 -->
<update id="update">
	update hosinsa_member set
	pw = #{pw, jdbcType=VARCHAR},
	name = #{name, jdbcType=VARCHAR},
	gender = #{gender, jdbcType=VARCHAR},
	birthday = to_date(#{birthday, jdbcType=DATE},'yyyy-MM-dd'),
	email = #{email, jdbcType=VARCHAR},
	phone = #{phone, jdbcType=CHAR},
	nickname = #{nickname, jdbcType=VARCHAR},
	profilimg = #{profilimg, jdbcType=VARCHAR},
	grade = #{grade, jdbcType=CHAR},
	introducer = #{introducer, jdbcType=VARCHAR},
	point = #{point, jdbcType=INTEGER}
	where id = #{id}
</update>

</mapper>